source: dasmeta/service/aws
version: 1.1.4
variables:
  name: backend
  create_namespace: false
  namespace: demo
  cluster_name: "eks-prod"
  alarms:
    enabled: false
    sns_topic: "Default"
  helm_values:
    image:
      repository: vshadbolt/strapi
      tag:  5.12.7
    strapi:
      env:
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "1337"
        - name: STRAPI_ADMIN_BACKEND_URL
          value: "https://api.demo.dasmeta.com"
        - name: STRAPI_PUBLIC_URL
          value: "https://api.demo.dasmeta.com"
    containerPort: 1337
    service:
      port: 1337
    ingress:
      annotations:
        alb.ingress.kubernetes.io/group.name: prod-ingress
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
        alb.ingress.kubernetes.io/success-codes: 200-399
        alb.ingress.kubernetes.io/group.order: "10"
        alb.ingress.kubernetes.io/healthcheck-path: /
        kubernetes.io/ingress.class: alb
      enabled: true
      hosts:
      - host: api.demo.dasmeta.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend
                port: http
providers:
  - name: aws
    version: ~> 4.0
    module_nested_provider: true
    variables:
      default_tags:
        tags:
          Account: prod
          ManageLevel: product
  - name: kubernetes
    version: ~> 2.23
    module_nested_provider: true
    source: "hashicorp/kubernetes"
    variables:
      cluster_ca_certificate: ${1-environments/prod/eks.cluster_certificate}
      host: ${1-environments/prod/eks.cluster_host}
    blocks:
      exec:
        api_version: "client.authentication.k8s.io/v1beta1"
        args:
          - "eks"
          - "--region"
          - "eu-central-1"
          - "get-token"
          - "--cluster-name"
          - "eks-prod"
        command: "aws"
  - name: helm
    version: "2.10.1"
    source: "hashicorp/helm"
    blocks:
      kubernetes:
        cluster_ca_certificate: ${1-environments/prod/eks.cluster_certificate}
        host: ${1-environments/prod/eks.cluster_host}
        blocks:
          exec:
            api_version: "client.authentication.k8s.io/v1beta1"
            args:
              - "eks"
              - "--region"
              - "eu-central-1"
              - "get-token"
              - "--cluster-name"
              - "eks-prod"
            command: "aws"
linked_workspaces:
  - 1-environments/prod/eks